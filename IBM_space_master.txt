convergence_space_1:
    Vanilla NS solver. no IBM. 
    From left to right: N = 64, 128, 196
    Result: converge.

convergence_space_2:
    Vanilla NS solver. no IBM. Add external force. 
    From left to right: N = 64, 128, 196
    Result: converge.

convergence_space_3:
    2D point matrix force spreading. 
    From left to right: N = 64, 96, 128
    Result: DOES NOT converge.

convergence_space_4:
    IBM force spreading from tension surface. 
    It's like 1D point array force spreading. 
    From left to right: N = 64, 128, 196
    Result: DOES NOT converge.

convergence_space_5:
    1D point ring force spreading. 
    From left to right: N = 64, 128, 196
    Result: DOES NOT converge.

convergence_space_6:
    IBM force spreading from tension surface. 
    Instead of spreading with dtheta, spread with 0.01.
    From left to right: N = 64, 128, 196
    Result: Converge!!!!
    Comment: How???

robust:
    N = 96, 128

droplet_wall_3x3:
    N = 96, 128, 192
    dt, pib_stiff:
        0.0001, 1000
        0.00005, 2000
        0.00002, 5000

conv_merge_two:
    N, dt = [
        (64, .0005), 
        (96, .0002), 
        (128, .0001), 
    ]

conv_merge_six_new:
    N, dt = [
        (96, .0002), 
        (128, .0001),
        (192, .00005), 
    ]

conv_floating_shrink:
    N, dt = [
        (64, 0.0001), 
        (128, 0.00005), 
    ]
